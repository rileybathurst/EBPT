/*------------------------------------*\
  #variables
\*------------------------------------*/

$emerald: #499E8F;
$moldavite: #3D7E69;
$moss: #2E5D58;
$ember: #EA6A00;

$pearl: #f8f8f8;
$hematite: #909090;
$stone: #5f5f5f;
$onyx: #0f0f0f;

// #variables

/*------------------------------------*\
  #typography
\*------------------------------------*/

html {
  font-family: "brandon-grotesque", sans-serif;
  // https://fonts.adobe.com/fonts/brandon-grotesque

  // https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust
  -ms-text-size-adjust: 100%; // Am I sure scss isnt doing this?
  -webkit-text-size-adjust: 100%; // do I need this?
}

body {
  font-size: 16px;
  line-height: 1.563rem; // why is this not the same as h tags
  font-style: normal;
  font-weight: 400; // regular weight brandon grotesque
}

// type-scale.com
// 1.250 Major Third
h1,
.h1 {
  margin-top: 0;
  font-size: 3.052rem;
  line-height: 4.578rem; // *1.5 // should this be *1.25
}

h2,
.h2 {
  font-size: 2.441rem;
  line-height: 3.6615rem;
}

h3,
.h3 {
  font-size: 1.953rem;
  line-height: 2.9295rem;
}

h4,
.h4 {
  font-size: 1.563rem;
  line-height: 2.3445rem;
}

h5,
.h5 {
  font-size: 1.25rem;
  line-height: 1.875rem;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-weight: 300; // light weight brandon grotesque
}

small,
.text_small {
  font-size: 0.8rem;
}

::selection {
  background-color: $emerald; // 3:1 contrast ratio on pearl is fine fo UI
}

a {
  color: $stone;
}

a:hover {
  color: $moldavite;
}

// https://webaim.org/techniques/css/invisiblecontent/
.sr-only {
  position:absolute;
  left:-10000px;
  top:auto;
  width:1px;
  height:1px;
  overflow:hidden;
}

.home-baselined {
  margin-top: 0;

  @media (min-width: 40rem) {
    margin-top: 2rem; // guess and check
    line-height: 2.3rem; // guess and check
  }
}

// this has problems when it's in the .two-fold the smallest gets a lot of stretch
// container queries would be the way to fix that but it's never happened
.justified-40 {
  @media (min-width: 40rem) {
    text-align: justify;
  }
}

// this doesn't want to be the block of the p
.h-center {
  text-align: center;
}

hr {
  border: none;
  border-bottom: 2px solid $emerald;
  margin: 1.25rem auto; // h5
  width: 50vw;
  margin-right: 50vw;
}

.hide-above-40 {
  @media (min-width: 40rem) {
    display: none;
  }
}

.forty-h3 {
  // i can probably do this with variables
  font-size: 1.953rem;

  @media (min-width: 40rem) {
    font-size: revert; // w3c validation issue
    // 4/27/21 88.56% supported
  }
}

.over-none {
  margin-top: 0;
}

.under-less {
  margin-bottom: 0.8rem;
}

.h-line {
  display: inline;
}

.distracted {
  color: $stone;
}

// #typography

/*------------------------------------*\
  #buttons
\*------------------------------------*/

button,
.buttoned {
  display: block;
  margin-top: 1rem;
}

button,
.buttoned a {
  width: auto;
  cursor: pointer;
  background: $moldavite;
  border: none; // browser reset
  color: $pearl;
  padding: 8px 16px;
  box-shadow: 3px 3px 5px 1px rgba(15, 15, 15, 0.2);
  text-decoration: none; // its obvious its a button
}

button:hover,
.buttoned a:hover {
  background: $moss;
  color: lighten($pearl, 20%); // custom color
  box-shadow: 3px 3px 5px 1px rgba(15, 15, 15, 0.4);
}

a[href^="tel:"]:before {
  content: "\1F4DE";
  margin-right: 0.5em;
  text-decoration: none;
  display: inline-block; // needed for the text-decoration

  @media (min-width: 20rem) {
    content: "\260E"; // this is an emoji on a phone and nice on desktop
  }
}

#call {
  margin-bottom: 2.441rem; // h2
}

// #buttons

/*------------------------------------*\
  #images
\*------------------------------------*/

svg {
  width: 100%;
  max-width: 4rem;
  max-height: 3rem;
  margin: 1rem;

  @media (min-width: 40rem) {
    max-height: 2rem;
  }
}

// keep these small till i deal with them
a svg {
  fill: $pearl;
}

a svg:hover {
  fill: darken($pearl, 20%);
}

.team-heads {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;

  > div {
    flex: 0 1 4rem; // guess and check
    margin: 0.5rem 1rem;
    text-align: center;

    > a {
      > .gatsby-image-wrapper {
        border-radius: 50%;
        border: 2px $pearl solid;
        box-shadow: 3px 3px 5px 1px rgba(15, 15, 15, 0.2);
        margin-bottom: 1rem;
        max-height: 8rem;
        // transition: 0.2s; // I want this but after it loads so I need to sort that

        // this is needed for safari and possibly others
        > picture {
          border-radius: 50%;
        }
      } // .gatsby-image-wrapper

      > .gatsby-image-wrapper:hover {
        box-shadow: 3px 3px 5px 1px rgba(15, 15, 15, 0.5);
      }
    } // a
  } // div
} // .team-heads

.image-stack {
  display: flex;
  flex-wrap: wrap;

  > .gatsby-image-wrapper {
    flex: 1 1 8rem; // guess and check
    margin: 0.5rem 1rem;
  }
}

.slender-image {
  height: 8rem; // seems like it centers the image better than max-height
  overflow: hidden;
  display: grid;
  // ppearl-content: center;
  margin-bottom: 2.9295rem;
}

// #images

/*------------------------------------*\
  #layout
\*------------------------------------*/

body {
  margin: 0; // reset
  margin-bottom: -1rem; // hacky but needed I think its a gatsby thing
}

.measured {
  max-width: 40rem;
  // lets the top and bottom be defaults
  margin-left: 1rem;
  margin-right: 1rem;

  @media (min-width: 40rem) {
    margin-left: auto;
    margin-right: auto;
  }
}

// this should always be on a section div etc not on the content
.two-fold {
  max-width: 66rem; // guess and check
  // this is a major design piece so detemines a lot of the site
  // needs to be a variable
  display: flex;
  margin: 0 auto;
  flex-wrap: wrap;
  padding: 0 1rem;

  > * { // I should use this more often
      flex: 1 1 21rem;
  }
}

// The question is ho many places can I use flex but not supports or flex gap
// https://caniuse.com/flexbox-gap
// https://developer.mozilla.org/en-US/docs/Web/CSS/@supports
// still kinda low numbers I need a fallback
@supports (gap: 2em) {
  .two-fold {
      gap: 2rem;
  }
}

// this is to match the two-fold for things like titles
// this should always be on a section div etc not on the content
.single-fold {
  max-width: 66rem;
  margin: 0 auto;
  padding: 0 1rem;
}

.inventory {
  color: $stone;
  @extend h4; // thinking about dropping this down so more fits on each line
  margin: 0; // this might need to be reinstated at larger sizes
  display: flex;
  flex-wrap: wrap;
  column-gap: 2rem;

  li {
    margin-bottom: 1.563rem; // this is the line height of the text
    // keeps the vertical rythm
    flex: 1 1 23rem; // guess and check
  }
}

// the difference is the list-style
.catalog {
  @extend .inventory;
  list-style: none;
  padding-left: 0; // reset
}

#intake-forms {
  // this might be too heavy handed
  // text-align: center;

  ul {
    list-style: none;
    padding-left: 0; // reset

    li {
      margin-bottom: 1em;

      h4 {
        margin-bottom: 0.8rem; // specifically small
      } // h5
      h5 {
        margin-bottom: 1rem; // specifically small
      } // h5
      p {
        margin-top: 0; // I might take this site wide it's currently running default
      }
    } // li
  } // ul
} // #intake-forms

// #layout

/*------------------------------------*\
  #veiled
\*------------------------------------*/

#veiled.active {
  // theres something about transle3d thats fastest IO should document that
  transform: translate3d(0, 0, 0);
}

#veiled.inactive {
  transform: translate3d(0, -100%, 0);
}

// this being an id rather than a class is causing conflicts that need important to overwrite
#veiled {
  transition: all 1s; // this should probably be a variable
  position: absolute;
  width: 100%;
  margin-top: -1rem; // gatsby something
  z-index: 99; // above any images logo etc

  ul {
    background: $moldavite;
    color: $onyx;
    list-style: none;
    padding: 1rem;
    margin-top: 0;
    margin-bottom: 0; // browser reset

    li {
      @extend h5;
      margin-bottom: 1rem;

      a {
        color: $pearl;
      }

      a:hover {
        color: darken($pearl, 20%);
      }
    }
  }

  @media (min-width: 60rem) {
    display: none;
  }
}

.veiled__header {
  padding-bottom: 0 !important; // overwrite #veiled ul

  li {
    margin-bottom: 0 !important; // overwrite #veiled ul li
    // this can probably be resoleved with heirachy

    a {
      display: block;

      svg {
        max-height: 5rem;
        max-width: 5rem;
      }
    }
  }
}

.veil-button {
  z-index: 99;
  position: relative; // needed for the z index
  float: right;
  @media (min-width: 70rem) {
    // this has to match #overt ul
    display: none;
  }
}

.close-button {
  margin-top: 0;
  background: $moss;
  color: $pearl;
  border: none;
  width: 100%;
  // text-decoration: underline;
  text-align: left;
  padding: 1rem;
}

// #veiled

/*------------------------------------*\
  #hero
\*------------------------------------*/

#overt ul {
  display: none;
  @extend h5; // this is weird you cant do it inside the media query
  padding-left: 0;

  @media (min-width: 70rem) {
  display: flex;
  justify-content: space-around;
  list-style: none;

       li {
          margin: 0 1rem;
          text-align: center;
      } // li
  } // @media 60rem
} // #overt

#hero {
  display: grid;
  grid-template-columns: 1fr 20rem 1fr; // ? not sure what im doing with this
  margin-bottom: 1rem;
  overflow: hidden; // crop the image

  @media (min-width: 42rem) {
    grid-template-columns: 1fr 40rem 1fr; // ? not sure what im doing with this
  }

  #logo__backer {
    grid-row: 1;
    grid-column: 2;
    place-self: center;
    background: $pearl;
    border-radius: 50%;
    width: 8rem; // guess and check
    height: 8rem; // guess and check
    opacity: 0.5;
  }

  #logo__border {
    grid-row: 1;
    grid-column: 2;
    place-self: center;
    border: 2px $pearl solid;
    border-radius: 50%;
    width: 8rem;
    height: 8rem;
  }

  #logo {
    grid-row: 1;
    grid-column: 2;
    place-self: center;
    z-index: 1; // above the backer and border
    // even tho this is after in the html it doesnt seem to be above

    a {
      display: grid;
      // keeps the icon centered in the backer
    }
  }

  .gatsby-image-wrapper {
    grid-row: 1;
    grid-column: 1/4;
    z-index: -1;
    min-height: 10rem;
    max-height: 20vh; // guess and check
    opacity: 0.33;
  }
}

header a svg {
  max-width: 6rem;
  max-height: 6rem;
  fill: $moss;
  margin: 1rem;
}

// this isnt working
header a svg:hover {
  fill: $moldavite;
}

// #hero

/*------------------------------------*\
  #backgrounds
\*------------------------------------*/

// its like an alert but not quite as much
.vigilant {
  background: $ember;
  padding: 0.5rem 1rem;
}

// nesting this doesnt work
.vigilant::selection {
  background-color: darken($ember, 20%);
}

.emerald-backed {
  background: $emerald;
  color: $pearl;

  a {
    color: $pearl;
    background: $emerald;
    display: inline-block;
    padding: 0.5rem 1rem;
  }

  a:hover {
    color: lighten($pearl, 20%);
    background: $moldavite;
  }
}

.emerald-backed::selection {
  background-color: $moldavite;
}

#contact > h4, // this naming is kinda terrible
footer h3 a {
  @extend .emerald-backed;
}

// #backgrounds

/*------------------------------------*\
  #contact
\*------------------------------------*/

#contact > h4 {
  width: max-content; // less line-breaks
}

.space-start {
  padding-left: 0.5rem;
}

.space-end {
  padding: 0.5rem 1rem;
}

// #contact

/*------------------------------------*\
  #footer
\*------------------------------------*/

#footer-social {
  border-top: 1rem solid $emerald;
  background: $moss;
  color: $pearl;
  padding: 1.953rem; // why this number

  a {
    color: $pearl; // conflicts with text color
    // has background tho
  }

  a:hover {
    color: darken($pearl, 20%);
  }

  // interesting little variable for all <h>
  @for $i from 1 through 6 {
    > h#{$i} {
      // this is a weird double thing that I think could be done better
      text-align: center;
    } // h
  } // @for

  ul {
    list-style: none;
    padding-left: 0; // reset
    display: flex;
    justify-content: space-around;

    li {
      padding: 0.5rem;

      a {
        // the svg to sit center
        display: flex;

        svg {
          margin: 0;
          padding: 1rem;
        }
      } // a

      a:hover {
        background: darken($moss, 20%);
        border-radius: 0.25rem; // match all icons having a rounded edge
      } // a:hover
    } // li
  } // ul
} // #footer-social

// #footer
